[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "elliptio"
authors = [
    {name = "Christian Gebbe", email = ""},
]

dependencies = [
    "pandas",
    "sqlalchemy",
    "fsspec",
    "pyyaml",
]
description = ""
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
urls = {homepage = "https://github.com/cgebbe/elliptio_data_lake"}
version = "0.2.1"


# from https://docs.astral.sh/ruff/configuration/
[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]


# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "ALL",
]


ignore = [
    "D", # pydocstyle
    "ANN", # (type) annotations
    "T201", # allow print
    "T203", # allow pprint
    "TD", # allow simple TODOs and fixmes
    "FIX", # allow FIXMEs
    "S101", # allow asserts
    "PD901", # df is a bad variable name
    "G004", # allow f-strings in logging
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = [
    "ALL",
]
unfixable = []


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[[tool.mypy.overrides]]
module = [
    "assertpy",
    "toolz",
    "fsspec",
    ]
ignore_missing_imports = true


[tool.commitizen]
name = "cz_customize"
tag_format = "$version"
update_changelog_on_bump = true
version_provider = "pep621"
version_scheme = "pep440"

[tool.commitizen.customize]
# PROBLEM: commitizen only bumps version for BREAKING, feat, fix, refactor, perf
# SOLUTION: see  https://github.com/commitizen-tools/commitizen/issues/781#issuecomment-1790555405
bump_map = {feat = "MINOR", fix = "PATCH", ci = "PATCH", build = "PATCH", perf = "PATCH", refactor = "PATCH", 'chore' = "PATCH", 'style' = "PATCH", 'test' = "PATCH", 'docs' = "PATCH"}
bump_pattern = '^(feat|fix|ci|build|perf|refactor|chore|style|test|docs)'
schema_pattern = '^(build|ci|docs|feat|fix|perf|refactor|style|test|chore|revert|bump|)(\(\S+\))?\:?\s.*'


[tool.pdm]
distribution = true

[tool.pdm.build]
excludes = ["**/*_test.py"]

[tool.pdm.dev-dependencies]
bump = [
  "commitizen"
]
check = [
    "mypy",
    "pandas-stubs",
    "types-PyYAML",
]
dev = [
    "ipykernel",
    "pudb",
    "pytest-pudb",
    "s3fs",
]
# from https://docs.astral.sh/ruff/configuration/
lint = [
  "pre-commit"
]
test = [
  "pytest"
]

[tool.pdm.scripts]
all = {composite = ["lint", "check", "test"]}
check = "mypy src"
# FIXME: Add line ending to `dotenv` command and then add to all
dotenv = {shell = "sed 's/=.*/=/' .env > .env.example"}
lint = "pre-commit run --all-files"
test = "pytest -vv src"
publish.cmd = "pdm publish -v -r pypi -u __token__ -P ${PYPI_TOKEN}"
publish.env_file = ".env"
